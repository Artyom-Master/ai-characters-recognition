#pragma once

#include <vector>

//Letters without noise (Á, Ê, Ñ)

std::vector<int8_t> B_CHARACTER
{
	 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
	 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
	 1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
	 1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
	 1,  1,  1,  1,  1,  1,  1,  1,  1, -1,
	 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
	 1,  1, -1, -1, -1, -1, -1, -1,  1,  1,
	 1,  1, -1, -1, -1, -1, -1, -1,  1,  1,
	 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
	 1,  1,  1,  1,  1,  1,  1,  1,  1, -1
};

std::vector<int8_t> K_CHARACTER
{
	 1,  1, -1, -1, -1, -1, -1, -1,  1,  1,
	 1,  1, -1, -1, -1, -1, -1,  1,  1, -1,
	 1,  1, -1, -1, -1, -1,  1,  1, -1, -1,
	 1,  1, -1, -1, -1,  1,  1, -1, -1, -1,
	 1,  1,  1,  1,  1,  1, -1, -1, -1, -1,
	 1,  1,  1,  1,  1,  1, -1, -1, -1, -1,
	 1,  1, -1, -1, -1,  1,  1, -1, -1, -1,
	 1,  1, -1, -1, -1, -1,  1,  1, -1, -1,
	 1,  1, -1, -1, -1, -1, -1,  1,  1, -1,
	 1,  1, -1, -1, -1, -1, -1, -1,  1,  1
};

std::vector<int8_t> C_CHARACTER
{
	-1, -1, -1,  1,  1,  1,  1,  1, -1, -1,
	-1, -1,  1,  1,  1,  1,  1,  1,  1, -1,
	-1,  1,  1, -1, -1, -1, -1, -1,  1,  1,
	 1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
     1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
     1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
     1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1,  1,  1, -1, -1, -1, -1, -1,  1,  1,
	-1, -1,  1,  1,  1,  1,  1,  1,  1, -1,
	-1, -1, -1,  1,  1,  1,  1,  1, -1, -1
};

//Noise samples (10 for each letter with 10%, 20%, 30%, ..., 90%, 100% noise)
//B noise samples

std::vector<std::vector<int8_t>> B_NOISE_SAMPLES
{
	{
		 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
		 1,  1,  1,  1,  1,  1, -1,  1,  1,  1,
		 1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
		 1,  1, -1, -1,  1, -1, -1, -1, -1, -1,
		 1,  1,  1,  1, -1, -1,  1,  1,  1, -1,
		-1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
		 1,  1, -1,  1, -1, -1, -1, -1,  1,  1,
		 1,  1,  1, -1, -1,  1, -1, -1,  1,  1,
		 1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
		 1,  1,  1,  1,  1, -1,  1,  1,  1, -1
	},
	{
		 1,  1,  1,  1, -1, -1, -1, -1,  1,  1,
		 1, -1,  1,  1,  1,  1,  1,  1,  1, -1,
		 1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
		 1,  1, -1,  1,  1, -1,  1, -1, -1, -1,
		 1, -1,  1,  1,  1,  1,  1,  1,  1, -1,
		 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
		-1,  1, -1,  1, -1, -1, -1, -1,  1,  1,
		-1,  1, -1, -1, -1,  1,  1,  1,  1,  1,
		 1,  1,  1,  1, -1,  1,  1,  1,  1,  1,
		 1, -1,  1,  1, -1, -1,  1,  1,  1, -1
	},
	{
		 1,  1,  1,  1, -1,  1,  1,  1,  1,  1,
		 1,  1,  1,  1,  1,  1,  1, -1,  1,  1,
		-1,  1, -1,  1,  1, -1, -1,  1,  1,  1,
		-1, -1,  1, -1, -1, -1, -1,  1,  1,  1,
		-1,  1,  1,  1,  1,  1,  1,  1,  1, -1,
		-1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
		 1, -1, -1, -1, -1,  1, -1, -1,  1,  1,
		 1, -1, -1, -1, -1,  1,  1,  1, -1, -1,
		-1,  1,  1,  1,  1,  1,  1,  1,  1, -1,
		 1, -1,  1,  1,  1,  1, -1, -1,  1,  1
	},
	{
		-1, -1, -1, -1,  1, -1, -1,  1,  1,  1,
		-1,  1,  1,  1,  1,  1,  1, -1,  1, -1,
		 1,  1, -1, -1,  1,  1,  1, -1, -1,  1,
		 1,  1,  1, -1,  1,  1, -1, -1, -1,  1,
		-1,  1, -1, -1,  1,  1,  1,  1, -1, -1,
		-1,  1,  1, -1, -1, -1, -1,  1,  1,  1,
		-1,  1, -1, -1,  1, -1,  1, -1,  1, -1,
		-1,  1, -1, -1, -1,  1,  1, -1,  1,  1,
		 1, -1, -1,  1,  1, -1,  1, -1, -1,  1,
		 1,  1,  1,  1, -1, -1,  1,  1,  1, -1
	},
	{
		 1,  1,  1, -1,  1, -1,  1,  1, -1, -1,
		-1, -1, -1, -1, -1, -1,  1, -1, -1,  1,
		-1, -1, -1, -1, -1, -1, -1, -1,  1,  1,
		-1,  1, -1, -1, -1, -1,  1,  1, -1, -1,
		-1,  1, -1,  1, -1, -1,  1,  1,  1,  1,
		-1,  1, -1, -1, -1,  1, -1,  1,  1,  1,
		-1, -1, -1,  1,  1,  1,  1, -1,  1, -1,
		-1, -1, -1,  1,  1,  1, -1, -1,  1, -1,
		 1,  1, -1, -1,  1, -1,  1,  1,  1,  1,
		-1,  1,  1, -1, -1,  1, -1,  1,  1,  1
	},
	{
		 1,  1, -1,  1,  1, -1, -1,  1, -1, -1,
		-1, -1, -1,  1,  1,  1,  1,  1, -1, -1,
		-1, -1,  1, -1, -1,  1,  1,  1,  1,  1,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		-1,  1, -1, -1, -1, -1, -1, -1, -1,  1,
		-1,  1, -1, -1, -1,  1, -1, -1, -1,  1,
		 1, -1,  1,  1, -1,  1,  1,  1, -1,  1,
		-1, -1,  1,  1, -1, -1, -1,  1, -1,  1,
		-1,  1, -1, -1,  1, -1,  1, -1,  1, -1,
		-1, -1,  1, -1,  1,  1,  1, -1, -1, -1
	},
	{
		-1, -1,  1, -1, -1,  1, -1,  1, -1, -1,
		 1,  1, -1, -1,  1, -1, -1, -1, -1, -1,
		 1, -1, -1, -1, -1,  1,  1,  1,  1,  1,
		 1,  1, -1,  1,  1, -1, -1,  1,  1,  1,
		-1, -1, -1,  1,  1,  1, -1, -1, -1,  1,
		-1,  1, -1, -1, -1,  1, -1, -1,  1, -1,
		-1, -1,  1,  1,  1, -1,  1,  1, -1,  1,
		-1, -1,  1,  1,  1, -1, -1, -1, -1,  1,
		 1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		-1,  1, -1, -1, -1,  1, -1, -1, -1,  1
	},
	{
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1,  1, -1, -1, -1,  1,  1,  1,  1,
		 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
		-1, -1, -1, -1, -1, -1, -1, -1, -1,  1,
		-1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
		-1,  1,  1,  1,  1, -1,  1,  1,  1,  1,
		-1, -1,  1,  1,  1,  1,  1, -1,  1,  1,
		-1,  1, -1,  1,  1, -1, -1, -1, -1,  1,
		-1, -1, -1, -1,  1,  1, -1, -1, -1, -1
	},
	{
	    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	    -1, -1, -1,  1,  1, -1,  1,  1,  1,  1,
	     1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
	     1, -1, -1, -1, -1,  1,  1, -1, -1,  1,
	     1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	     1, -1,  1,  1,  1,  1,  1,  1, -1, -1,
	    -1, -1,  1,  1,  1,  1,  1,  1, -1, -1,
	    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	    -1, -1, -1, -1, -1,  1, -1, -1, -1, -1
	},
	{
	    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	    -1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
	    -1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
	    -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,
	    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	    -1, -1,  1,  1,  1,  1,  1,  1, -1, -1,
	    -1, -1,  1,  1,  1,  1,  1,  1, -1, -1,
	    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1, -1,  1
	}
};

//K noise samples

std::vector<std::vector<int8_t>> K_NOISE_SAMPLES
{
	{
		 1,  1, -1, -1, -1, -1, -1, -1,  1,  1,
		-1,  1, -1,  1, -1, -1, -1,  1,  1, -1,
		 1,  1, -1, -1, -1, -1,  1,  1, -1, -1,
		 1, -1, -1, -1, -1,  1,  1, -1,  1, -1,
		 1,  1,  1,  1,  1,  1, -1, -1,  1, -1,
		 1, -1,  1,  1, -1,  1, -1, -1, -1, -1,
		 1,  1, -1, -1, -1, -1,  1, -1, -1,  1,
		 1,  1, -1, -1, -1, -1,  1,  1, -1,  1,
		 1,  1, -1, -1, -1, -1, -1,  1,  1, -1,
		 1,  1, -1, -1, -1, -1, -1, -1,  1,  1
	},
	{
		 1, -1, -1,  1, -1,  1, -1, -1,  1,  1,
		 1, -1, -1,  1,  1,  1, -1,  1,  1, -1,
		-1,  1, -1, -1,  1,  1,  1,  1, -1, -1,
		 1,  1, -1, -1, -1,  1,  1, -1, -1, -1,
		 1,  1,  1,  1,  1,  1, -1, -1, -1, -1,
		-1,  1,  1,  1,  1,  1, -1, -1, -1, -1,
		 1, -1, -1, -1, -1,  1,  1, -1, -1, -1,
		 1, -1, -1, -1, -1, -1,  1,  1, -1, -1,
		 1,  1, -1, -1,  1,  1, -1,  1,  1, -1,
		 1,  1, -1, -1, -1,  1,  1,  1, -1, -1
	},
	{
		 1,  1, -1, -1, -1, -1,  1, -1,  1,  1,
		 1,  1, -1, -1,  1, -1,  1, -1,  1, -1,
		 1, -1, -1,  1,  1, -1,  1,  1, -1, -1,
		 1, -1, -1, -1,  1,  1,  1, -1, -1, -1,
		-1, -1,  1,  1, -1, -1, -1, -1,  1,  1,
		-1, -1,  1,  1,  1,  1, -1, -1,  1, -1,
		 1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
		 1,  1, -1,  1, -1, -1,  1,  1, -1,  1,
		-1,  1, -1,  1,  1, -1, -1,  1,  1, -1,
		-1, -1, -1,  1, -1,  1,  1, -1,  1,  1
	},
	{
		-1,  1, -1,  1,  1, -1, -1, -1,  1,  1,
		 1, -1, -1,  1,  1,  1, -1,  1,  1, -1,
		-1,  1,  1, -1,  1, -1, -1,  1, -1, -1,
		-1,  1, -1, -1, -1,  1, -1,  1, -1, -1,
		-1, -1, -1,  1,  1,  1,  1, -1,  1,  1,
		-1,  1,  1, -1, -1,  1, -1,  1,  1, -1,
		-1,  1, -1, -1, -1,  1,  1, -1, -1,  1,
		-1, -1, -1, -1, -1, -1,  1,  1, -1, -1,
		-1, -1, -1,  1,  1,  1, -1,  1,  1,  1,
		-1,  1, -1, -1,  1, -1,  1,  1, -1,  1
	},
	{
		 1,  1,  1, -1,  1,  1,  1, -1,  1,  1,
		 1,  1, -1,  1,  1,  1, -1, -1, -1, -1,
		-1, -1, -1,  1, -1, -1,  1,  1,  1,  1,
		-1, -1,  1, -1, -1,  1,  1, -1,  1, -1,
		 1,  1,  1, -1,  1,  1, -1,  1,  1, -1,
		 1, -1,  1, -1, -1,  1,  1, -1, -1,  1,
		-1, -1, -1, -1,  1, -1,  1,  1,  1,  1,
		-1, -1, -1, -1,  1,  1, -1,  1, -1,  1,
		-1, -1, -1,  1,  1,  1, -1, -1,  1, -1,
		-1,  1, -1,  1,  1,  1,  1, -1,  1,  1
	},
	{
		-1,  1,  1,  1,  1,  1,  1, -1, -1, -1,
		 1,  1,  1,  1,  1, -1,  1, -1, -1,  1,
		-1,  1,  1, -1,  1,  1,  1,  1,  1, -1,
		-1,  1,  1, -1, -1,  1, -1,  1,  1, -1,
		 1, -1, -1, -1,  1,  1,  1, -1, -1, -1,
		-1, -1,  1, -1, -1,  1,  1, -1,  1, -1,
		-1,  1,  1,  1,  1,  1, -1, -1,  1, -1,
		-1, -1,  1, -1,  1,  1, -1, -1,  1, -1,
		-1,  1,  1, -1,  1, -1,  1, -1, -1, -1,
		 1,  1, -1,  1, -1,  1,  1,  1, -1,  1
	},
	{
		-1,  1,  1,  1,  1,  1, -1,  1, -1, -1,
		-1,  1, -1, -1,  1,  1, -1, -1, -1,  1,
		-1, -1,  1, -1,  1,  1,  1, -1,  1,  1,
		-1, -1,  1,  1,  1, -1,  1,  1,  1, -1,
		 1,  1, -1, -1,  1, -1,  1, -1, -1,  1,
		 1,  1, -1,  1, -1, -1,  1,  1, -1,  1,
		 1, -1,  1, -1,  1, -1, -1, -1,  1, -1,
		 1, -1,  1, -1, -1,  1, -1,  1,  1,  1,
		-1, -1,  1,  1, -1,  1,  1,  1, -1,  1,
		-1, -1,  1,  1,  1,  1,  1,  1, -1,  1
	},
	{
		 1,  1, -1,  1, -1,  1,  1,  1, -1, -1,
		-1, -1,  1,  1,  1,  1,  1, -1, -1,  1,
		-1, -1,  1,  1,  1, -1,  1,  1,  1, -1,
		-1, -1,  1,  1,  1, -1, -1,  1,  1, -1,
		-1,  1, -1,  1, -1, -1,  1,  1,  1,  1,
		-1,  1, -1, -1,  1, -1,  1,  1, -1, -1,
		-1,  1,  1,  1,  1, -1, -1,  1, -1,  1,
		-1, -1,  1,  1,  1,  1, -1, -1,  1,  1,
		 1, -1, -1,  1,  1,  1,  1, -1, -1,  1,
		-1, -1,  1,  1, -1,  1,  1,  1, -1, -1
	},
	{
		-1, -1,  1,  1,  1,  1,  1,  1, -1, -1,
		-1, -1,  1,  1, -1,  1,  1, -1, -1,  1,
		-1, -1,  1, -1,  1,  1, -1, -1,  1,  1,
		-1, -1,  1,  1,  1, -1, -1,  1,  1,  1,
		-1,  1, -1, -1, -1, -1,  1,  1, -1,  1,
		-1, -1, -1, -1, -1, -1,  1,  1, -1,  1,
		-1, -1,  1,  1,  1, -1, -1,  1, -1,  1,
		-1,  1,  1,  1,  1,  1, -1,  1,  1,  1,
		-1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
		-1, -1,  1,  1,  1,  1,  1,  1, -1, -1
	},
	{
		-1, -1,  1,  1,  1,  1,  1,  1, -1, -1,
		-1, -1,  1,  1,  1,  1,  1, -1, -1,  1,
		-1, -1,  1,  1,  1,  1, -1, -1,  1,  1,
		-1, -1,  1,  1,  1, -1, -1,  1,  1,  1,
		-1, -1, -1, -1, -1, -1,  1,  1,  1,  1,
		-1, -1, -1, -1, -1, -1,  1,  1,  1,  1,
		-1, -1,  1,  1,  1, -1, -1,  1,  1,  1,
		-1, -1,  1,  1,  1,  1, -1, -1,  1,  1,
		-1, -1,  1,  1,  1,  1,  1, -1, -1,  1,
		-1, -1,  1,  1,  1,  1,  1,  1, -1, -1
	},
};

//C noise samples

std::vector<std::vector<int8_t>> C_NOISE_SAMPLES
{
	{
		-1, -1, -1,  1,  1,  1,  1,  1, -1, -1,
		-1, -1,  1, -1,  1,  1,  1,  1,  1, -1,
		-1,  1, -1,  1, -1, -1, -1, -1,  1,  1,
		 1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
		 1,  1, -1, -1, -1, -1, -1, -1, -1, -1,
		 1,  1, -1, -1, -1,  1, -1, -1, -1, -1,
		 1,  1, -1, -1, -1,  1, -1, -1, -1, -1,
		-1,  1, -1,  1, -1,  1, -1, -1,  1,  1,
		-1, -1, -1,  1,  1,  1,  1,  1,  1, -1,
		-1, -1,  1,  1,  1,  1,  1,  1, -1, -1
	},
	{
		 1, -1, -1,  1,  1, -1,  1,  1, -1, -1,
		 1,  1,  1, -1,  1,  1,  1,  1,  1, -1,
		-1,  1,  1,  1, -1, -1, -1, -1,  1,  1,
		 1,  1, -1, -1, -1,  1, -1, -1, -1, -1,
		 1,  1, -1,  1, -1,  1, -1, -1, -1, -1,
		 1,  1, -1,  1, -1, -1,  1,  1, -1, -1,
		 1,  1, -1, -1, -1, -1, -1,  1, -1, -1,
		-1,  1,  1, -1, -1, -1, -1,  1,  1,  1,
		-1, -1,  1,  1,  1,  1, -1, -1,  1, -1,
		-1,  1, -1,  1, -1, -1, -1,  1, -1, -1
	},
	{
		-1,  1, -1,  1, -1, -1, -1,  1, -1, -1,
		 1,  1,  1, -1, -1,  1,  1,  1, -1, -1,
		-1, -1, -1, -1,  1, -1, -1, -1,  1,  1,
		 1,  1, -1, -1,  1, -1, -1, -1, -1, -1,
		-1,  1, -1,  1,  1, -1, -1, -1,  1, -1,
		-1,  1, -1,  1, -1, -1, -1, -1,  1, -1,
		 1, -1, -1, -1, -1,  1, -1, -1, -1,  1,
		-1,  1,  1, -1, -1, -1, -1, -1,  1, -1,
		-1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
		-1, -1, -1, -1, -1,  1,  1, -1,  1,  1
	},
	{
		-1, -1, -1,  1, -1, -1, -1, -1,  1, -1,
		-1,  1,  1,  1, -1,  1, -1, -1,  1,  1,
		-1,  1,  1, -1, -1,  1, -1, -1,  1,  1,
		-1, -1, -1, -1, -1, -1,  1, -1, -1, -1,
		-1,  1, -1,  1,  1,  1,  1, -1, -1,  1,
		-1, -1,  1, -1, -1, -1,  1,  1, -1, -1,
		 1,  1, -1,  1,  1, -1, -1, -1, -1,  1,
		 1,  1,  1, -1,  1,  1, -1,  1,  1,  1,
		 1,  1,  1,  1,  1, -1,  1,  1,  1, -1,
		-1,  1, -1,  1, -1, -1,  1, -1, -1,  1
	},
	{
		-1, -1,  1, -1,  1,  1,  1, -1,  1, -1,
		 1, -1,  1, -1, -1, -1,  1, -1,  1,  1,
		-1,  1,  1, -1, -1, -1, -1,  1,  1,  1,
		 1, -1, -1,  1, -1,  1,  1,  1,  1, -1,
		-1,  1, -1,  1,  1, -1,  1, -1,  1, -1,
		-1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
		-1, -1, -1, -1, -1,  1,  1, -1,  1, -1,
		 1, -1,  1, -1, -1,  1, -1, -1,  1,  1,
		-1,  1,  1,  1, -1, -1,  1,  1, -1, -1,
		 1, -1, -1, -1,  1,  1, -1, -1,  1,  1
	},
	{
		 1,  1,  1, -1, -1,  1,  1, -1,  1, -1,
		-1, -1,  1, -1, -1, -1,  1, -1, -1,  1,
		 1, -1, -1,  1,  1, -1,  1,  1,  1, -1,
		 1, -1,  1,  1,  1,  1,  1,  1, -1,  1,
		 1, -1,  1, -1, -1, -1, -1,  1, -1,  1,
		 1,  1, -1, -1,  1, -1,  1, -1,  1, -1,
		-1,  1,  1,  1,  1, -1,  1, -1,  1,  1,
		 1, -1, -1, -1,  1,  1,  1,  1, -1, -1,
		-1, -1, -1,  1, -1,  1, -1, -1, -1, -1,
		-1,  1,  1, -1,  1,  1,  1,  1, -1, -1
	},
	{
		 1, -1,  1, -1,  1, -1, -1, -1,  1,  1,
		 1,  1, -1, -1,  1,  1, -1,  1,  1, -1,
		 1,  1, -1, -1,  1,  1,  1,  1, -1,  1,
		-1,  1,  1,  1,  1,  1,  1,  1,  1, -1,
		 1,  1,  1, -1, -1, -1,  1,  1,  1, -1,
		 1,  1,  1,  1, -1, -1,  1, -1,  1,  1,
		-1, -1,  1,  1,  1,  1,  1, -1,  1,  1,
		 1, -1, -1,  1,  1,  1,  1,  1, -1, -1,
		 1,  1,  1, -1, -1, -1, -1, -1,  1,  1,
		-1, -1,  1, -1,  1, -1,  1, -1,  1,  1
	},
	{
		 1,  1,  1, -1, -1, -1, -1, -1,  1,  1,
		 1,  1, -1, -1, -1, -1, -1, -1, -1,  1,
		 1, -1,  1,  1,  1,  1,  1,  1, -1, -1,
		-1, -1, -1, -1, -1, -1,  1,  1,  1,  1,
		-1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
		-1,  1,  1,  1, -1,  1, -1, -1, -1,  1,
		-1,  1,  1,  1,  1, -1, -1,  1,  1,  1,
		 1, -1, -1,  1,  1,  1, -1,  1, -1, -1,
		 1,  1, -1, -1, -1,  1, -1, -1,  1,  1,
		 1, -1,  1, -1,  1,  1, -1, -1,  1,  1
	},
	{
		 1,  1,  1, -1, -1,  1,  1, -1,  1,  1,
		 1,  1, -1, -1, -1, -1,  1, -1, -1,  1,
		 1, -1, -1,  1,  1,  1, -1,  1, -1, -1,
		-1,  1,  1,  1,  1,  1, -1,  1,  1,  1,
		-1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
		-1, -1,  1,  1, -1,  1,  1,  1,  1,  1,
		-1, -1,  1,  1, -1, -1, -1,  1,  1,  1,
		 1, -1, -1,  1,  1,  1,  1,  1, -1, -1,
		 1,  1, -1, -1, -1, -1, -1, -1, -1,  1,
		 1,  1,  1, -1, -1, -1, -1, -1,  1,  1
	},
	{
		 1,  1,  1, -1, -1, -1, -1, -1,  1,  1,
		 1,  1, -1, -1, -1, -1, -1, -1, -1,  1,
		 1, -1, -1,  1,  1,  1,  1,  1, -1, -1,
		-1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
		-1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
		-1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
		-1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
		 1, -1, -1,  1,  1,  1,  1,  1, -1, -1,
		 1,  1, -1, -1, -1, -1, -1, -1, -1,  1,
		 1,  1,  1, -1, -1, -1, -1, -1,  1,  1
	},
};